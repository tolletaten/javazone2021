apiVersion: v1
kind: Template
metadata:
  name: toll-app
  annotations:
    description: "Toll toll-app"
    iconClass: "icon-openjdk"
    tags: "toll,demo,backend,buildConfig"
objects:

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: toll-app
      name: toll-app
    spec:
      replicas: ${{REPLICAS}}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: toll-app
            app: toll-app
            environment: ${ENVIRONMENT}
          annotations:
            prometheus.io/scrape: 'true'
            prometheus.io/path: /v1/toll-app/prometheus
            prometheus.io/port: "8080"
        spec:
          containers:
            - env:
                - name: VERSION
                  value: ${DOCKER_TAG}
                - name: ENVIRONMENT
                  value: ${ENVIRONMENT}

                - name: KAFKA_TOLLAPP_TOPIC_NAME
                  value: ${KAFKA_TOLLAPP_TOPIC_NAME}

                - name: SPRING_KAFKA_CONSUMER_GROUP_ID
                  value: ${SPRING_KAFKA_CONSUMER_GROUP_ID}

                - name: KAFKA_TOLLAPP_DLQ_TOPIC_NAME
                  value: ${KAFKA_TOLLAPP_DLQ_TOPIC_NAME}
                - name: KAFKA_TOLLAPP_DLQ_TOPIC_PARTITIONS
                  value: ${KAFKA_TOLLAPP_DLQ_TOPIC_PARTITIONS}
                - name: KAFKA_TOLLAPP_DLQ_TOPIC_REPLICAS
                  value: ${KAFKA_TOLLAPP_DLQ_TOPIC_REPLICAS}
                - name: KAFKA_TOLLAPP_DLQ_TOPIC_RETENTION_MS
                  value: ${KAFKA_TOLLAPP_DLQ_TOPIC_RETENTION_MS}

              image: ${DOCKER_IMAGE}:${DOCKER_TAG}
              imagePullPolicy: Always
              name: toll-app
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  cpu: 100m
                  memory: 0.3G
                limits:
                  cpu: 400m
                  memory: 0.5G
              livenessProbe:
                failureThreshold: 20
                httpGet:
                  path: /v1/toll-app/liveness
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                failureThreshold: 20
                httpGet:
                  path: /v1/toll-app/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
      triggers: [ ]

  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: toll-app
      name: toll-app
    spec:
      path: /v1/toll-app
      port:
        targetPort: 8080
      to:
        kind: Service
        name: toll-app
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: toll-app
      name: toll-app
    spec:
      ports:
        - name: rest-api
          port: 8080
          targetPort: 8080
      selector:
        name: toll-app

parameters:
  - name: DOCKER_IMAGE
    required: true
  - name: DOCKER_TAG
    required: true
  - name: ENVIRONMENT
    required: true
  - name: REPLICAS
    required: true
  - name: KAFKA_TOLLAPP_TOPIC_NAME
    required: true
  - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
    required: true
  - name: SPRING_KAFKA_CONSUMER_GROUP_ID
    required: true
  - name: KAFKA_TOLLAPP_DLQ_TOPIC_NAME
    required: true
  - name: KAFKA_TOLLAPP_DLQ_TOPIC_PARTITIONS
    required: true
  - name: KAFKA_TOLLAPP_DLQ_TOPIC_REPLICAS
    required: true
  - name: KAFKA_TOLLAPP_DLQ_TOPIC_RETENTION_MS
    required: true